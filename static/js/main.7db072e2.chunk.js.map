{"version":3,"sources":["components/Section/Section.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","list","map","option","onClick","button","name","shortid","generate","Statistics","good","neutral","bad","total","positivePercentage","statisticList","positivefeed","Notification","message","notification","App","state","clickActiveItem","item","setState","PrevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Feedback","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,aAAe,qC,qKCejBC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzB,OACE,sBAAKC,UAAYC,IAAEC,QAAnB,UACE,6BAAKJ,IACJC,M,iCCsBQI,MAzBd,YAGG,IAFFC,EAEC,EAFDA,QACAC,EACC,EADDA,gBAEA,OACE,oBAAIL,UAAWC,IAAEK,KAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEC,QAAS,kBAAMJ,EAAgBG,IAC/BR,UAAWC,IAAES,OACbC,KAAMH,EAHR,SAKGA,KANII,IAAQC,kB,gBC2BVC,MAnCf,YAMI,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAInB,UAAWC,IAAEmB,cAAjB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oBAAGlB,UAAYC,IAAEoB,aAAjB,gCAAmDF,EAAnD,a,iBCfQG,MAPhB,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGvB,UAAWC,IAAEuB,aAAhB,SAA+BD,KCkDzBE,E,4MA/CbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,EAI9BG,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjBX,KADiB,EACXC,QADW,EACFC,K,EAIzBe,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKR,MAAMX,KAAc,EAAKgB,uB,uDAIjD,OACE,gCACE,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACE,cAACqC,EAAD,CACE/B,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB+B,KAAKT,oBAG1B,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACiC,IAA9BsC,KAAKL,qBACJ,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,cAAC,EAAD,CACER,KAAMqB,KAAKV,MAAMX,KACjBC,QAASoB,KAAKV,MAAMV,QACpBC,IAAKmB,KAAKV,MAAMT,IAChBC,MAAOkB,KAAKL,qBACZZ,mBAAoBiB,KAAKJ,6C,GAxCpBK,aCDnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B/C,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,kBCAzDD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,aAAe,oC","file":"static/js/main.7db072e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3XMSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3atEW\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\n function Section({ title, children }) {\r\n  return (\r\n    <div className ={s.section}>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default  Section;","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './Feedback.module.css';\r\n\r\n function FeedbackOptions({\r\n  options,\r\n  onLeaveFeedback,\r\n}) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {options.map(option => (\r\n        <li key={shortid.generate()}>\r\n          <button\r\n            onClick={() => onLeaveFeedback(option)}\r\n            className={s.button}\r\n            name={option}\r\n          >\r\n            {option}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={s.statisticList}>\r\n      <li>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total: {total}</p>\r\n      </li>\r\n      <li>\r\n        <p className ={s.positivefeed}>Positive feedback: {positivePercentage}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n  return <p className={s.notification}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default  Notification;","import { Component } from 'react';\nimport Section from './components/Section';\nimport Feedback from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\n class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickActiveItem = item => {\n    this.setState(PrevState => ({\n      [item]: PrevState[item] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.clickActiveItem}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__26lvh\",\"button\":\"Feedback_button__3xHcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__3OCke\",\"positivefeed\":\"Statistics_positivefeed__1CqV6\"};"],"sourceRoot":""}